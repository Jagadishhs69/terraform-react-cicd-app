name: Terraform Infra

on:
  push:
    branches: [ infra ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'dev | staging | prod'
        required: true
        default: 'dev'

env:
  TF_VERSION: 1.9.8
  AWS_REGION: ap-south-1

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout infra branch
        uses: actions/checkout@v4
        with:
          ref: infra

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: List files
        run: pwd && ls -R
      
      - name: Terraform Init
        working-directory: ./environment/${{ github.event.inputs.environment }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ./environment/${{ github.event.inputs.environment }}
        run: terraform plan -out=tfplan -var-file="../../tfvars/${{ github.event.inputs.environment }}.tfvars"

      - name: Convert plan to text
        working-directory: ./environment/${{ github.event.inputs.environment }}
        run: terraform show -no-color tfplan > plan.txt

      - name: Upload tfplan (binary)
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./environment/${{ github.event.inputs.environment }}/tfplan

      - name: Upload Plan Text File
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-text
          path: ./environment/${{ github.event.inputs.environment }}/plan.txt

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment:
      name: prod-approval   # requires manual approval in GitHub Environments

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: infra

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download tfplan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ./environment/${{ github.event.inputs.environment }}

      - name: Terraform Init
        working-directory: ./environment/${{ github.event.inputs.environment }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ./environment/${{ github.event.inputs.environment }}
        run: terraform apply -auto-approve tfplan

      - name: Get Outputs
        id: tf-outputs
        working-directory: ./environment/${{ github.event.inputs.environment }}
        run: 
          echo "ASG_NAME=$(terraform output -raw asg_name)" >> $GITHUB_OUTPUT
          echo "ALB_DNS=$(terraform output -raw alb_dns_name)" >> $GITHUB_OUTPUT
          echo "ECR_REPO=$(terraform output -raw ecr_repo)" >> $GITHUB_OUTPUT
        
 

      
